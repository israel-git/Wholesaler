@model Wholesaler.Models.PaymentDetailsModel
@{
    ViewBag.id = ViewBag.companyID.CompanyID;
    ViewBag.orderID = Model.Payment.OrderID;

    ViewBag.Title = "Payment Details";
    Layout = "~/Views/Shared/_OrderNavbar.cshtml";
}
@{
    decimal totalOrderedProducts = 0;
    decimal totalCosts = 0;
    decimal totalExpenses = 0;
    decimal totalInternalExpenses = 0;
    decimal totalExternalExpenses = 0;
    decimal subTotal = 0;
}
@foreach (var product in Model.Order.OrderedProducts)
{
    var cost = product.Cost ?? 0;
    //@cost.ToString("C")
    var quantity = product.Quantity ?? 0;
    var costXquant = cost * quantity;
    totalCosts += costXquant;

    var price = product.Price ?? 0;
    subTotal = price * quantity;
    totalOrderedProducts += subTotal;
}

@foreach (var expense in Model.Order.Expenses)
{
    var expenseAmount = expense.Amount ?? 0;
    if (expense.Internal == true)
    { totalInternalExpenses += expenseAmount; }
    else
    { totalExternalExpenses += expenseAmount; }

    totalExpenses += expenseAmount;
}
@{
    var shipping = Model.Order.Shipping ?? 0;
    decimal totalwExternal = totalOrderedProducts + totalExternalExpenses;
    decimal totalwCostsInternal = totalCosts + totalInternalExpenses;
    decimal totalPayments = 0;
    foreach (var payment in Model.PaymentsList)
    {
        totalPayments += payment.Amount ?? 0;
    }
    decimal amountDue = totalwExternal + shipping - totalPayments;
    decimal totalExternalWShipping = totalOrderedProducts + totalExternalExpenses + shipping;
}

@section summaryBar
{
    <div class="summaryBox">
        <div class="firstColumn">
            <strong>Company:</strong> @Model.Order.Company.CompanyName<br /> <strong>Status: </strong>@Model.Order.OrderStatuses.StatusName<br />
            <strong>From:</strong> @Model.Order.FromCompany.CompanyName<br /> <strong>To:</strong> @Model.Order.ToCompany.CompanyName
        </div>
        <div class="secondColumn">
            <strong>Total Cost: </strong>@totalwCostsInternal.ToString("C")<br /> <strong>Total Order:</strong>  @totalExternalWShipping.ToString("C")<br />
            <strong>Total Paid: </strong>@totalPayments.ToString("C")<br /> <strong>Amount Due: </strong>@amountDue.ToString("C")
        </div>
    </div>
}
<script>
    function submitForm() { $('#pageForm').submit(); }
</script>


<form method="post" id="pageForm" action="~/Payments/PaymentDetails/@Model.Payment.ID" enctype="multipart/form-data">
    @if (Model.Payment.ID > 0)
    {
        @Html.HiddenFor(x => x.Payment.ID)
        @Html.HiddenFor(x => x.Payment.OrderID)
    }
    <div class="row  col-sm-12 formHolder">

    </div>
    <div class="row">&nbsp;</div>
    @*<div class="pageIcons"><a href="@Url.Action("PaymentsList/" + Model.Payment.OrderID, "Payments")" title="Back"><i class="glyphicon glyphicon-arrow-left  btn-lg  edit-del " style="color:#337AB7; border: 1px solid black; margin-bottom: 10px;"></i></a></div>*@
    <div class="row col-sm-12 formEditContainer well">

        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.Payment.Date, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Payment.Date)
                </div>
            </div>
        </p>
        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Amount</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.Payment.Amount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Payment.Amount)
                </div>
            </div>
        </p>
        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Payment Method</label>
                <div class="col-sm-7">
                    @Html.DropDownListFor(x => x.Payment.PaymentMethod, new SelectList(
                          new List<Object>
                          {
                              new {value = "", text = "Select a Payment Method" },
                              new {value = "Wire", text = "Wire" },
                              new {value = "Credit Card", text = "Credit Card"},
                              new {value = "Check", text = "Check"}
                          },
                          "value",
                          "text"
                          ), new { @class = "form-control" })
                </div>
            </div>
        </p>
        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Transaction ID</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.Payment.TransactionID, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Payment.TransactionID)
                </div>
            </div>
        </p>

        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Reference #</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.Payment.ReferenceNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Payment.ReferenceNumber)
                </div>
            </div>
        </p>
        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Cleared?</label>
                <div class="col-sm-7">
                    Yes @Html.RadioButtonFor(x => x.Payment.Cleared, "true", new { @checked = "true" })
                    &nbsp;
                    No @Html.RadioButtonFor(x => x.Payment.Cleared, "false")
                </div>
            </div>
        </p>
        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Notes</label>
                <div class="col-sm-7">
                    @Html.TextAreaFor(x => x.Payment.Notes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Payment.Notes)
                </div>
            </div>
        </p>
        <p>
            <div class="row">
                <label class="col-sm-2 control-label">Documents</label>
                <div class="col-sm-7">
                    <table class="table striped hover data-table" id="main-table" data-order="[]"
                           data-orderable="true"
                           data-sort-name="ID"
                           data-sort-order="asc">
                        <thead>
                            <tr>
                                <th data-field="ID" data-sortable="true">ID</th>
                                <th data-field="Documents" data-sortable="true">Document Name</th>
                                <th data-orderable="false" data-width="140"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doc in Model.DocumentsList)
                            {
                                string url = "http://localhost:5564/Uploads/Documents/" + doc.GUID;
                                <tr>
                                    <td>@doc.ID</td>
                                    <td><a href="@url" target="_blank">@doc.DocumentName</a></td>
                                    <td>
                                        <button onclick="deleteDocument(@doc.ID); return false;" class="btn btn-danger btn-xs"><i class="glyphicon glyphicon-trash"></i> Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                </div>
            </div>
        <p>
            <h3>Add New Document</h3>
            <div class="row">
                <label class="col-sm-2 control-label">Document Name</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(x => x.Document.DocumentName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Document.DocumentName)
                </div>
            </div>
        </p>
        <div class="row">
            <label class="col-sm-2 control-label" for="file">Upload Document</label>
            <div class="col-sm-7">
                <input type="file" name="documentFile" />
            </div>
        </div>
    </div>

    @if (Model.Payment.ID > 0)
    {
        <button type="button" class="btn btn-success" onclick="submitForm(); return false;">Save</button>
        @:&nbsp;
        <button type="button" class="btn btn-danger" onclick="deleteItem(@Model.Payment.ID); return false;">Delete</button>
    }

</form>

<script>
    var table;
    $(function () {
        table = $('#main-table').bootstrapTable();
    });
    function deleteItem(id) {
        smoke.confirm('Are you sure you want to delete this record?', function (e) {
            if (e)
                location.href = '/Payments/Delete/' + id;
        });
    }
    function deleteDocument(id) {
        smoke.confirm('Are you sure you want to delete this document?', function (e) {
            if (e)
                location.href = '/Payments/DeleteDocument/' + id;
        });
    }
</script>



